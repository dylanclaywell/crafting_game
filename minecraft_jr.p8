pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
function _update()
	update_player()
end

function _draw()
	cls(3)
	camera(player.x-60,player.y-60)
	map(0,0,0,0,16,16)
	draw_player()
	draw_tracked_objs()
end
-->8
player={
	cur_spr=1,
	x=1,
	y=1,
	inventory_open=false,
	dir='left',
	is_punching=false,
	punching_counter=0,
	punching_speed=10,
	anim_counter=0,
	anim_speed=20,
	flip_spr=false,
	moving=false,
}

function draw_player()
	spr(player.cur_spr,player.x,player.y,1,1,player.flip_spr)
	if(player.inventory_open) then end
	
	pos=get_tool_grid_pos()
	tilex=pos.x
	tiley=pos.y
	
 --rect(tilex*8,tiley*8,(tilex*8)+8,(tiley*8)+8,6)
 spr(5,tilex*8,tiley*8)

	draw_inventory()
	draw_actionbar()
end

function update_player()
 if(not(actionbar.is_open)) then
		if(btn(0)) then 
			player.x=player.x-1
			player.dir='left' 
			player.flip_spr=true
			player.moving=true
		end
		if(btn(1)) then 
			player.x=player.x+1
			player.dir='right'
			player.flip_spr=false
			player.moving=true 
		end
		if(btn(2)) then 
			player.y=player.y-1
			player.dir='up' 
			player.moving=true
		end
		if(btn(3)) then 
			player.y=player.y+1
			player.dir='down' 
			player.moving=true
		end
		
		if(not(btn(0) or btn(1) or btn(2) or btn(3))) then
			player.moving=false
			player.cur_spr=1
		end
		
		if(player.moving) then
			player.anim_counter=player.anim_counter+player.anim_speed
			
			if(player.anim_counter >= 100) then
				player.anim_counter=0
				
				if(player.cur_spr==1) then
					player.cur_spr=2
				else
					player.cur_spr=1
				end
			end
		end
	
		if(btnp(4)) then
		 punch() 
		end
	
	 if(btnp(5)) then toggle_inventory() end
	
	else
		if(btnp(5)) then toggle_inventory() end
	end
	
	update_inventory()
	update_actionbar()
end

function toggle_inventory()
	if(actionbar.is_open) then
		actionbar.is_closing=true
	else
		actionbar.is_opening=true
	end
end

function get_tool_grid_pos()
 ptilex=flr((player.x+4)/8)
	ptiley=flr((player.y+4)/8)
	
	tilex=ptilex
	tiley=ptiley
	
	if(player.dir=='left') then
	 tilex=tilex-1
	elseif(player.dir=='right') then
		tilex=tilex+1
	elseif(player.dir=='up') then
		tiley=tiley-1
	elseif(player.dir=='down') then
		tiley=tiley+1
	end
	
	return {x=tilex,y=tiley}
end

function punch()
	pos=get_tool_grid_pos()
	tilex=pos.x
	tiley=pos.y
	 
 tile=mget(tilex,tiley)
 
 if(tile!=0) then
 	tiledef=tiledefs[tile]
 	
 	if(not tiledef) then return end
 
 	punch_obj(tilex*8,tiley*8,tiledef)
 end
end
-->8
inventory={
	is_open=false,
	is_opening=false,
	is_closing=false,
	x=10,
	y=10,
	height=0,
	max_height=40,
	width=50,
	open_speed=10,
	items={}
}

function draw_inventory()
 x=player.x-60+inventory.x
 y=player.y-60+inventory.y
 
	if(inventory.is_opening or inventory.is_closing) then
	 rectfill(x,y,x+inventory.width,y+inventory.height,1)
	elseif(inventory.is_open) then
	 rectfill(x,y,x+inventory.width,y+inventory.height,1)
		rect(x+1,y+1,x+inventory.width-1,y+inventory.height-1,7)
		print('items',x+3,y+3)
	 line(x+1,y+9,x+inventory.width-1,y+9,7)
	
		i=0
		for k,v in pairs(inventory.items) do
			print(k,x+3,y+12+(7*i))
			print(v.amount,x+inventory.width-13,y+12+(7*i))
			
			i=i+1
		end
	end
end

function update_inventory()
 if(not(inventory.is_open) and inventory.is_opening) then
 	if(inventory.height<inventory.max_height) then
 	 inventory.height=inventory.height+inventory.open_speed
 	else
 		inventory.is_open=true
 		inventory.is_opening=false
 	end
 elseif(inventory.is_open and inventory.is_closing) then
 	if(inventory.height>0) then
 		inventory.height=inventory.height-inventory.open_speed
 	else
 		inventory.is_open=false
 		inventory.is_closing=false
 	end
 end
end

function add_item_to_inv(name,amount)
	item=inventory.items[name]
	
	if(item) then
		item.amount=item.amount+amount
	else
		inventory.items[name]={
		 amount=amount
		}
	end
end
-->8
tiledefs={
	[32]={
		name='tree',
		drop='wood',
		durability=5,
		tile=32
	},
	[33]={
		name='stone',
		drop='stone',
		durability=5,
		tile=33
	}
}
-->8
actionbar={
	x=160,
	y=160,
	offset=75,
	is_opening=false,
	is_open=false,
	is_closing=false,
	crsr_pos=1
}

function draw_actionbar()  
 draw_action('items',0,0,30,10,1)
 draw_action('build',0,12,30,10,2)
 draw_action('cook',0,24,30,10,3)
end

function draw_action(text,x,y,w,h,idx)
 offset=0
 hicolor=6
 if(actionbar.crsr_pos==idx) then
  offset=4
  hicolor=7
 end
 
 xx=actionbar.x+x-offset
 yy=actionbar.y+y
 
 
 rectfill(xx,yy,xx+w,yy+h,1)
 rect(xx+1,yy+1,xx+w-1,yy+h-1,hicolor)
 print(text,xx+3,yy+3,hicolor)
end

function update_actionbar()
 actionbar.x=player.x+actionbar.offset
 actionbar.y=player.y-55
 
 if actionbar.is_opening and actionbar.offset>45 then
		actionbar.offset=actionbar.offset-8
	elseif actionbar.is_opening and actionbar.offset<=45 then
		actionbar.is_opening=false
		actionbar.is_open=true
	end
	
	if actionbar.is_closing and actionbar.offset<75 then
		actionbar.offset=actionbar.offset+8
	elseif actionbar.is_closing and actionbar.offset>=75 then
		actionbar.is_closing=false
		actionbar.is_open=false
	end

	if (actionbar.is_open) then
	 if(btnp(3)) then
	  if(actionbar.crsr_pos<3) then
	 	 actionbar.crsr_pos=actionbar.crsr_pos+1
	 	end
 	end
 
	 if(btnp(2)) then
	  if(actionbar.crsr_pos>1) then
	 	 actionbar.crsr_pos=actionbar.crsr_pos-1
	 	end
	 end
	 
	 if(btnp(4)) then
	 	if(inventory.is_open) then
	 		inventory.is_closing=true
	 	else
	 		inventory.is_opening=true
	 	end
	 end
	end
end

-->8
tracked_objs={

}

function draw_tracked_objs()
	for o in all(tracked_objs) do
		rectfill(o.x-2,o.y-1,o.x+9,o.y+2,1)
		
		hwidth=-2+(9*(o.health/o.durability))
		
		rectfill(o.x-1,o.y,o.x+hwidth,o.y+1,8)
	end
end

function find_obj(x,y)
	obj=nil
	
	for o in all(tracked_objs) do
		if(o.x==x and o.y==y) then
			obj=o
		end
	end
	
	return obj
end

function track_obj(x,y,durability,drop)
	newobj={
		x=x,
		y=y,
		durability=durability,
		health=durability,
		drop=drop
	}
	
	add(tracked_objs,newobj)
	
	return newobj 
end

function untrack_obj(x,y)
	obj=find_obj(x,y)
	
	if(not obj) then return end
	
	del(tracked_objs,obj)
end

function punch_obj(x,y,tiledef)
 obj=find_obj(x,y)
 
 if(obj) then
 	obj.health=obj.health-1
 else
 	obj=track_obj(x,y,tiledef.durability,tiledef.drop)
 	obj.health=obj.health-1
 end
 
	if(obj.health<=0) then
		add_item_to_inv(tiledef.name,1)
		mset(tilex,tiley,0)
		untrack_obj(x,y)
	end
end
__gfx__
00000000000000000111111000000000000000007770077700010000000100000000000000000000000000000000000000000000000000000000000000000000
000000000111111001444410000000000000000071100117001b1000001810000000000000000000000000000000000000000000000000000000000000000000
007007000144441001f5f510000000000000000071000017001bb100001881000000000000000000000000000000000000000000000000000000000000000000
0007700001f5f51001fddd10000000000000000010000001001bbb10001888100000000000000000000000000000000000000000000000000000000000000000
0007700001fddd1001188110000000000000000070000007001bbb10001888100000000000000000000000000000000000000000000000000000000000000000
0070070001188110001cc100000000000000000070000007001bb100001881000000000000000000000000000000000000000000000000000000000000000000
00000000001cc10000111100000000000000000077700777001b1000001810000000000000000000000000000000000000000000000000000000000000000000
00000000001111000000000000000000000000001110011100010000000100000000000000000000000000000000000000000000000000000000000000000000
11111111111111111111111155555555444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
18788881144444411666566156666665499999940000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
17777771114411111666566156666665499999940000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
18887881144444411555555156666665499999940000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
18887881111144411656666156666665499999940000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
17777771144441111656666156666665499999940000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
18788881144444411656666156666665499999940000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111111111111111111155555555444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00177100011111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01bbb710116771100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
13bbbbb1166677110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
133bbbb1155666610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
13333331115556510000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11144111011155100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000001111100001110000011111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000011666110001610000016661000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00111100016111610001610000014111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001ff100011141110001610000014100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001ff100000141000011611000014100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00111100000141000014441000014100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000141000011411000014100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000111000001110000011100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000210000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000012141412002100200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000200012141412000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000210000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000002100200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
